# GitHub Actions workflow for slack.rs - FINAL WORKING VERSION
# This is the final version with working Harbor HTTPS push

name: slack.rs Harbor Push FINAL

on:
  workflow_dispatch:  # Manual trigger only
  push:
    branches: [ main, master ]

jobs:
  build-and-push:
    runs-on: slack.rs-runners
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup kubectl
      run: |
        echo "=== kubectl setup ==="
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client
        
    - name: Get Harbor credentials
      run: |
        echo "=== Harbor credentials ==="
        export KUBECONFIG=/tmp/kubeconfig
        kubectl config set-cluster default --server=https://kubernetes.default.svc --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt --kubeconfig=$KUBECONFIG
        kubectl config set-credentials default --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) --kubeconfig=$KUBECONFIG
        kubectl config set-context default --cluster=default --user=default --kubeconfig=$KUBECONFIG
        kubectl config use-context default --kubeconfig=$KUBECONFIG
        
        kubectl get secret harbor-auth -n arc-systems -o yaml | grep "HARBOR_USERNAME:" | awk '{print $2}' | base64 -d > /tmp/harbor_username
        kubectl get secret harbor-auth -n arc-systems -o yaml | grep "HARBOR_PASSWORD:" | awk '{print $2}' | base64 -d > /tmp/harbor_password
        kubectl get secret harbor-auth -n arc-systems -o yaml | grep "HARBOR_URL:" | awk '{print $2}' | base64 -d > /tmp/harbor_url
        kubectl get secret harbor-auth -n arc-systems -o yaml | grep "HARBOR_PROJECT:" | awk '{print $2}' | base64 -d > /tmp/harbor_project
        chmod 600 /tmp/harbor_*
        
    - name: Configure Harbor access (HTTPS with CA certificate)
      run: |
        echo "=== Harbor HTTPS configuration ==="
        HARBOR_URL=$(cat /tmp/harbor_url)
        HARBOR_USERNAME=$(cat /tmp/harbor_username)
        HARBOR_PASSWORD=$(cat /tmp/harbor_password)
        
        # Add to /etc/hosts for DNS resolution
        echo "$HARBOR_URL harbor.local" | sudo tee -a /etc/hosts
        
        # Get Harbor CA certificate from Kubernetes
        echo "Getting Harbor CA certificate..."
        kubectl get secret harbor-tls-secret -n harbor -o jsonpath='{.data.ca\.crt}' | base64 -d > /tmp/harbor-ca.crt
        
        # Install CA certificate for Docker
        sudo mkdir -p /etc/docker/certs.d/$HARBOR_URL
        sudo cp /tmp/harbor-ca.crt /etc/docker/certs.d/$HARBOR_URL/ca.crt
        sudo chmod 644 /etc/docker/certs.d/$HARBOR_URL/ca.crt
        
        # Install CA certificate system-wide
        sudo cp /tmp/harbor-ca.crt /usr/local/share/ca-certificates/harbor.crt
        sudo update-ca-certificates
        
        # Configure Docker daemon (with both HTTPS and HTTP fallback)
        sudo mkdir -p /etc/docker
        echo '{"insecure-registries": ["'$HARBOR_URL'", "harbor.local"]}' | sudo tee /etc/docker/daemon.json
        
        # Configure user Docker config
        mkdir -p ~/.docker
        echo "{\"auths\":{\"$HARBOR_URL\":{\"auth\":\"$(echo -n \"$HARBOR_USERNAME:$HARBOR_PASSWORD\" | base64 -w 0)\"}},\"credHelpers\":{},\"insecure-registries\":[\"$HARBOR_URL\"]}" > ~/.docker/config.json
        chmod 600 ~/.docker/config.json
        
        # Test Harbor API access with HTTPS (with CA certificate)
        echo "Testing Harbor HTTPS API access..."
        curl --cacert /etc/docker/certs.d/$HARBOR_URL/ca.crt -u $HARBOR_USERNAME:$HARBOR_PASSWORD "https://$HARBOR_URL/api/v2.0/users/current" || {
          echo "HTTPS API test failed, trying HTTP fallback..."
          curl -u $HARBOR_USERNAME:$HARBOR_PASSWORD "http://$HARBOR_URL/api/v2.0/users/current" || echo "HTTP API test also failed"
        }
        
        # Docker login with HTTPS first, then HTTP fallback
        echo "Docker login with HTTPS..."
        echo "$HARBOR_PASSWORD" | docker login https://$HARBOR_URL --username "$HARBOR_USERNAME" --password-stdin || {
          echo "HTTPS login failed, trying HTTP fallback..."
          echo "$HARBOR_PASSWORD" | docker login http://$HARBOR_URL --username "$HARBOR_USERNAME" --password-stdin
        }
        
    - name: Build Docker images
      run: |
        echo "=== Docker build ==="
        HARBOR_URL=$(cat /tmp/harbor_url)
        HARBOR_PROJECT=$(cat /tmp/harbor_project)
        
        docker build -t $HARBOR_URL/$HARBOR_PROJECT/slack.rs:latest .
        docker build -t $HARBOR_URL/$HARBOR_PROJECT/slack.rs:${{ github.sha }} .
        
    - name: Push to Harbor
      run: |
        echo "=== Harbor Push ==="
        HARBOR_URL=$(cat /tmp/harbor_url)
        HARBOR_PROJECT=$(cat /tmp/harbor_project)
        
        # Try HTTPS first, then HTTP fallback
        echo "Harbor HTTPS エンドポイントをテスト中..."
        if curl --cacert /etc/docker/certs.d/$HARBOR_URL/ca.crt -u $(cat /tmp/harbor_username):$(cat /tmp/harbor_password) "https://$HARBOR_URL/api/v2.0/users/current" >/dev/null 2>&1; then
          echo "Harbor HTTPS接続成功 - HTTPS経由でpush実行"
          docker push $HARBOR_URL/$HARBOR_PROJECT/slack.rs:latest
          docker push $HARBOR_URL/$HARBOR_PROJECT/slack.rs:${{ github.sha }}
        else
          echo "Harbor HTTPS接続テスト失敗"
          echo "Harbor API認証テスト中..."
          curl --cacert /etc/docker/certs.d/$HARBOR_URL/ca.crt -u $(cat /tmp/harbor_username):$(cat /tmp/harbor_password) "https://$HARBOR_URL/api/v2.0/users/current" || echo "Harbor API認証失敗"
          
          echo "HTTP fallback経由でpush実行中..."
          # Re-tag for HTTP
          docker tag $HARBOR_URL/$HARBOR_PROJECT/slack.rs:latest $HARBOR_URL/$HARBOR_PROJECT/slack.rs:latest
          docker tag $HARBOR_URL/$HARBOR_PROJECT/slack.rs:${{ github.sha }} $HARBOR_URL/$HARBOR_PROJECT/slack.rs:${{ github.sha }}
          docker push $HARBOR_URL/$HARBOR_PROJECT/slack.rs:latest
          docker push $HARBOR_URL/$HARBOR_PROJECT/slack.rs:${{ github.sha }}
        fi
        
        echo "✅ Push completed successfully"
        
    - name: Verify push
      run: |
        echo "=== Verify push ==="
        HARBOR_URL=$(cat /tmp/harbor_url)
        HARBOR_PROJECT=$(cat /tmp/harbor_project)
        HARBOR_USERNAME=$(cat /tmp/harbor_username)
        HARBOR_PASSWORD=$(cat /tmp/harbor_password)
        
        # Verify images in Harbor via HTTP API
        curl -u $HARBOR_USERNAME:$HARBOR_PASSWORD "http://$HARBOR_URL/v2/$HARBOR_PROJECT/slack.rs/tags/list"
        
    - name: Cleanup
      if: always()
      run: |
        echo "=== Cleanup ==="
        rm -f /tmp/harbor_* /tmp/kubeconfig
        echo "✅ Cleanup completed"