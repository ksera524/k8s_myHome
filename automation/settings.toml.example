# k8s_myHome 自動化設定ファイル（サンプル）
# このファイルをコピーして settings.toml として使用してください
#
# 使用方法:
# 1. cp settings.toml.example settings.toml
# 2. 必要な値を設定
# 3. make all 実行
#
# セキュリティ注意:
# - settings.toml は .gitignore に追加済み
# - リポジトリにコミットしないでください

[host_setup]
# USB外部ストレージデバイス名
# lsblk コマンドで確認してください
# 例: "sdb", "sdc", "nvme0n1"
usb_device_name = ""

[kubernetes]
# Kubernetes APT鍵ファイル上書き確認
# 通常は "y" を設定
overwrite_kubernetes_keyring = "y"

[pulumi]
# Pulumi Access Token (必須)
# 取得方法: https://app.pulumi.com/account/tokens
# 形式: pul-で始まる40文字の英数字
access_token = ""


[github]
# GitHub Personal Access Token（GitHub Actions用）
# 取得方法: GitHub Settings > Developer settings > Personal access tokens
# 権限: repo, workflow, admin:org (組織使用時)
personal_access_token = ""

# GitHub Repository (例: username/repository)
repository = ""

# GitHubユーザー名（ArgoCD OAuth用）
username = ""

# GitHub Actions Runner Controller (ARC) 対象リポジトリリスト
# make all実行時に自動作成されるRunnerScaleSet用設定
# 
# 📋 設定方法:
# 各配列要素: [リポジトリ名, 最小Runner数, 最大Runner数, 説明]
#
# 🔧 Runner数の設定指針:
# minRunners (最小Runner数):
#   0 = オンデマンド起動 - ジョブがあるときのみRunner起動（リソース節約）
#   1 = 常時稼働 - 1台のRunnerが常駐してすぐにジョブを開始
#
# maxRunners (最大Runner数):
#   同時実行可能な最大Runner数（並列ジョブ数に応じて設定）
#   推奨: 通常は 1-3、大規模プロジェクトは 5以下
#
# 🏃 作成されるRunnerScaleSet名:
# リポジトリ名 "my.project" → Runner名 "my-project-runners"
# (ドット、アンダースコアは自動的にハイフンに変換)
#
# 📝 使用例:
# arc_repositories = [
#     ["k8s_myHome", 1, 3, "メインの k8s_myHome プロジェクト"],
#     ["slack.rs", 0, 3, "Slack.rs Rust プロジェクト"], 
#     ["docs-site", 0, 1, "軽量なドキュメントサイト"],
#     ["api-server", 0, 2, "API サーバープロジェクト"]
# ]
#
# 🎯 Workflow内での使用:
# jobs:
#   build:
#     runs-on: k8s-myhome-runners    # k8s_myHome専用
#     runs-on: slack-rs-runners      # slack.rs専用
arc_repositories = []

[network]
# ネットワーク設定（ホスト環境に合わせて調整）
host_network_cidr = "192.168.122.0/24"
host_gateway_ip = "192.168.122.1"

# Kubernetes クラスタIP（libvirtデフォルト範囲）
control_plane_ip = "192.168.122.10"
worker_1_ip = "192.168.122.11"
worker_2_ip = "192.168.122.12"

# MetalLB LoadBalancer IP範囲
metallb_ip_start = "192.168.122.100"
metallb_ip_end = "192.168.122.150"

# サービス用固定IP
harbor_lb_ip = "192.168.122.100"
ingress_lb_ip = "192.168.122.101"

# 内部サービスポート（通常は変更不要）
argocd_port_forward = 8080
harbor_port_forward = 8081
kubernetes_api_port = 6443


[automation]
# 自動化オプション
auto_confirm_overwrite = true
enable_external_secrets = true
enable_github_actions = true
# CloudflaredはExternal Secrets Operatorから自動取得

[logging]
# ログ設定
debug = false
verbose = true