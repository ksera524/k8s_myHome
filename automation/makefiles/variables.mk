# k8s_myHome Variables
# хЕ▒щАЪхдЙцХ░уБишинхоЪхАдуБохоЪч╛й

# уГЧуГнуВ╕уВзуВпуГИхЯ║цЬмшинхоЪ
PROJECT_ROOT := $(shell pwd)
PROJECT_NAME := k8s_myHome

# уГЗуВгуГмуВпуГИуГкцзЛщАа
HOST_SETUP_DIR := $(PROJECT_ROOT)/host-setup
INFRASTRUCTURE_DIR := $(PROJECT_ROOT)/infrastructure
PLATFORM_DIR := $(PROJECT_ROOT)/platform
SCRIPTS_DIR := $(PROJECT_ROOT)/scripts
MANIFESTS_DIR := $(PROJECT_ROOT)/manifests

# шинхоЪуГХуВбуВдуГл
SETTINGS_FILE := $(PROJECT_ROOT)/settings.toml
COMMON_COLORS := $(SCRIPTS_DIR)/common-colors.sh
SETTINGS_LOADER := $(SCRIPTS_DIR)/settings-loader.sh

# Kubernetes уВпуГйуВ╣уВ┐шинхоЪя╝Иsettings.tomlуБзф╕КцЫ╕уБНхПпшГ╜я╝Й
K8S_CONTROL_PLANE_IP := $(shell if [ -n "$${K8S_CONTROL_PLANE_IP}" ]; then echo "$${K8S_CONTROL_PLANE_IP}"; else echo "192.168.122.10"; fi)
K8S_WORKER_1_IP := $(shell if [ -n "$${K8S_WORKER_1_IP}" ]; then echo "$${K8S_WORKER_1_IP}"; else echo "192.168.122.11"; fi)
K8S_WORKER_2_IP := $(shell if [ -n "$${K8S_WORKER_2_IP}" ]; then echo "$${K8S_WORKER_2_IP}"; else echo "192.168.122.12"; fi)
K8S_USER := k8suser

# SSHшинхоЪ
SSH_OPTS := -o StrictHostKeyChecking=no -o BatchMode=yes -o LogLevel=ERROR -o ConnectTimeout=5

# уВ┐уВдуГауВвуВжуГИшинхоЪ
K8S_CLUSTER_TIMEOUT := 300
EXTERNAL_SECRETS_TIMEOUT := 180
GITOPS_SYNC_WAIT := 15

# HarborшинхоЪ
HARBOR_NAMESPACE := harbor
HARBOR_DEFAULT_PROJECT := sandbox

# ArgoCDшинхоЪ  
ARGOCD_NAMESPACE := argocd
ARC_NAMESPACE := arc-systems

# уВлуГйуГ╝хоЪч╛йя╝Ич╡╡цЦЗхнЧуГЩуГ╝уВ╣ - ч╡▒ф╕Ая╝Й
ROCKET := ЁЯЪА
CHECK := тЬЕ
WARNING := тЪая╕П
ERROR := тЭМ
INFO := тД╣я╕П
DEBUG := ЁЯФН
GEAR := ЁЯФз
CLOUD := тШБя╕П
RECYCLE := ЁЯФД

# уВиуВпуВ╣уГЭуГ╝уГИя╝ИуВ╖уВзуГлуВ╣уВпуГкуГЧуГИчФия╝Й
export PROJECT_ROOT
export K8S_CONTROL_PLANE_IP
export K8S_USER
export SSH_OPTS