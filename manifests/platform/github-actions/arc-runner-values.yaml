# GitHub Actions Runner用のHelm Values
# setup-arc.shスクリプトで使用される設定
apiVersion: v1
kind: ConfigMap
metadata:
  name: arc-runner-values
  namespace: arc-systems
  labels:
    app: arc-runner-config
data:
  values.yaml: |
    # GitHub Actions Runner Scale Set用のHelm Values
    # Harbor用insecure registry設定を含む
    
    # Runner設定
    runnerScaleSetName: "default-runners"
    githubConfigUrl: "https://github.com/ksera524"
    githubConfigSecret: "github-token"
    
    # Runner Pod Template
    template:
      spec:
        # Runner Container
        containers:
        - name: runner
          image: ghcr.io/actions/actions-runner:latest
          command:
          - /home/runner/run.sh
          env:
          - name: DOCKER_HOST
            value: unix:///var/run/docker.sock
          - name: RUNNER_WAIT_FOR_DOCKER_IN_SECONDS
            value: "120"
          volumeMounts:
          - mountPath: /home/runner/_work
            name: work
          - mountPath: /var/run
            name: dind-sock
        
        # Init Containers
        initContainers:
        - name: init-dind-externals
          image: ghcr.io/actions/actions-runner:latest
          command:
          - cp
          args:
          - -r
          - /home/runner/externals/.
          - /home/runner/tmpDir/
          volumeMounts:
          - mountPath: /home/runner/tmpDir
            name: dind-externals
        
        # Harbor CA証明書インストール用initContainer
        - name: harbor-ca-installer
          image: alpine:latest
          command:
          - /bin/sh
          - -c
          - |
            echo "Harbor CA証明書をインストール中..."
            
            # CA証明書を適切な場所にコピー
            mkdir -p /certs/192.168.122.100
            cp /harbor-ca/ca.crt /certs/192.168.122.100/ca.crt
            
            # システム信頼ストアにも追加
            cp /harbor-ca/ca.crt /usr/local/share/ca-certificates/harbor-ca.crt
            update-ca-certificates
            
            echo "Harbor CA証明書インストール完了"
            echo "証明書詳細:"
            openssl x509 -in /harbor-ca/ca.crt -text -noout | grep -A 2 "Subject Alternative Name" || echo "SANs情報表示エラー"
            
          volumeMounts:
          - mountPath: /harbor-ca
            name: harbor-ca-cert
            readOnly: true
          - mountPath: /certs
            name: docker-certs
          - mountPath: /usr/local/share/ca-certificates
            name: ca-certificates
          securityContext:
            runAsUser: 0
        
        # Docker in Docker Container with CA certificate trust
        - name: dind
          image: docker:dind
          args:
          - dockerd
          - --host=unix:///var/run/docker.sock
          - --group=$(DOCKER_GROUP_GID)
          env:
          - name: DOCKER_GROUP_GID
            value: "123"
          securityContext:
            privileged: true
          restartPolicy: Always
          startupProbe:
            exec:
              command:
              - docker
              - info
            failureThreshold: 24
            initialDelaySeconds: 0
            periodSeconds: 5
          volumeMounts:
          - mountPath: /home/runner/_work
            name: work
          - mountPath: /var/run
            name: dind-sock
          - mountPath: /home/runner/externals
            name: dind-externals
          - mountPath: /etc/docker/certs.d
            name: docker-certs
          - mountPath: /usr/local/share/ca-certificates
            name: ca-certificates
        
        # Service Account
        serviceAccountName: github-actions-runner
        
        # Volumes
        volumes:
        - name: dind-sock
          emptyDir: {}
        - name: dind-externals
          emptyDir: {}
        - name: work
          emptyDir: {}
        - name: harbor-ca-cert
          secret:
            secretName: harbor-ca-cert
            defaultMode: 0444
        - name: docker-certs
          emptyDir: {}
        - name: ca-certificates
          emptyDir: {}
        
        restartPolicy: Never
    
    # Scale設定
    minRunners: 0
    maxRunners: 3
---
# Docker daemon設定用ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: docker-daemon-config
  namespace: arc-systems
  labels:
    app: arc-runner-config
data:
  daemon.json: |
    {
      "insecure-registries": ["192.168.122.100"],
      "log-driver": "json-file",
      "log-opts": {
        "max-size": "10m",
        "max-file": "3"
      }
    }