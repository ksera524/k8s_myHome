# GitHub Actions Runner Controller (ARC) - 公式版
# https://github.com/actions/actions-runner-controller
# Generated from official Helm chart: gha-runner-scale-set-controller v0.12.1

---
apiVersion: v1
kind: Namespace
metadata:
  name: arc-systems
  labels:
    app.kubernetes.io/part-of: actions-runner-controller

---
# ARC Controller ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: arc-controller-gha-rs-controller
  namespace: arc-systems
  labels:
    app.kubernetes.io/name: gha-rs-controller
    app.kubernetes.io/part-of: gha-rs-controller

---
# ARC Controller ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: arc-controller-gha-rs-controller
rules:
- apiGroups: ["actions.github.com"]
  resources: ["autoscalingrunnersets", "autoscalinglisteners", "ephemeralrunnersets", "ephemeralrunners"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["actions.github.com"]
  resources: ["autoscalingrunnersets/finalizers", "autoscalingrunnersets/status"]
  verbs: ["patch", "update", "get"]
- apiGroups: ["actions.github.com"]
  resources: ["autoscalinglisteners/status", "autoscalinglisteners/finalizers"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["actions.github.com"]
  resources: ["ephemeralrunnersets/status", "ephemeralrunnersets/finalizers"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["actions.github.com"]
  resources: ["ephemeralrunners/status", "ephemeralrunners/finalizers"]
  verbs: ["get", "patch", "update"]
- apiGroups: [""]
  resources: ["pods", "secrets", "configmaps", "events", "services"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]

---
# ARC Controller ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: arc-controller-gha-rs-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: arc-controller-gha-rs-controller
subjects:
- kind: ServiceAccount
  name: arc-controller-gha-rs-controller
  namespace: arc-systems

---
# ARC Controller Namespace-level Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: arc-controller-gha-rs-controller
  namespace: arc-systems
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

---
# ARC Controller RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: arc-controller-gha-rs-controller
  namespace: arc-systems
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: arc-controller-gha-rs-controller
subjects:
- kind: ServiceAccount
  name: arc-controller-gha-rs-controller
  namespace: arc-systems

---
# ARC Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: arc-controller-gha-rs-controller
  namespace: arc-systems
  labels:
    app.kubernetes.io/name: gha-rs-controller
    app.kubernetes.io/part-of: gha-rs-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gha-rs-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gha-rs-controller
    spec:
      serviceAccountName: arc-controller-gha-rs-controller
      containers:
      - name: manager
        image: ghcr.io/actions/gha-runner-scale-set-controller:0.12.1
        args:
        - --leader-elect
        - --sync-period=1m
        command:
        - /manager
        env:
        - name: CONTROLLER_MANAGER_CONTAINER_IMAGE
          value: ghcr.io/actions/gha-runner-scale-set-controller:0.12.1
        - name: CONTROLLER_MANAGER_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 10